-- EX 01 -----------

CREATE DATABASE `stc`;

USE `stc`;

CREATE TABLE `categories`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(10) NOT NULL
);

CREATE TABLE `cars`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `make` VARCHAR(20) NOT NULL,
    `model` VARCHAR(20),
	`year` INT DEFAULT 0 NOT NULL,
    `mileage` INT DEFAULT 0,
    `condition` CHAR(1) NOT NULL,
    `category_id` INT NOT NULL,
    CONSTRAINT `fk_categories_cars`
    FOREIGN KEY (`category_id`)
    REFERENCES `categories`(`id`)
);

CREATE TABLE `clients`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `full_name` VARCHAR(50) NOT NULL,
    `phone_number` VARCHAR(20) NOT NULL
);

CREATE TABLE `addresses`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(100) NOT NULL
);

CREATE TABLE `courses`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `from_address_id` INT NOT NULL,
    `start` DATETIME NOT NULL,
    `car_id` INT NOT NULL,
    `client_id` INT NOT NULL,
    `bill` DECIMAL(10, 2) DEFAULT 10,
    CONSTRAINT `fk_addresses_courses`
    FOREIGN KEY (`from_address_id`)
    REFERENCES `addresses`(`id`),
    CONSTRAINT `fk_clients_courses`
    FOREIGN KEY (`client_id`)
    REFERENCES `clients`(`id`),
    CONSTRAINT `fk_cars_courses`
    FOREIGN KEY (`car_id`)
    REFERENCES `cars`(`id`)
);

CREATE TABLE `drivers`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `first_name` VARCHAR(30) NOT NULL,
    `last_name` VARCHAR(30) NOT NULL,
    `age` INT NOT NULL,
    `rating` FLOAT DEFAULT 5.5
);

CREATE TABLE `cars_drivers`(
	`car_id` INT NOT NULL,
    `driver_id` INT NOT NULL,
    CONSTRAINT `pk_car_driver`
    PRIMARY KEY (`car_id`, `driver_id`),
    CONSTRAINT `fk_cars_drivers_cars`
    FOREIGN KEY (`car_id`)
    REFERENCES `cars`(`id`),
    CONSTRAINT `fk_cars_drivers_drivers`
    FOREIGN KEY (`driver_id`)
    REFERENCES `drivers`(`id`)
);

-- EX 02 --------
INSERT INTO `clients`(`full_name`, `phone_number`)
SELECT  CONCAT(`first_name`, ' ', `last_name`), CONCAT('(088) 9999', `id` * 2)
FROM `drivers`
WHERE `id` BETWEEN 10 AND 20;

-- EX 03 -------------

UPDATE `cars`
SET `condition` = (
CASE
	WHEN `mileage` >= 800000 OR `mileage` IS NULL AND `year` <= 2010 THEN 'C'
    ELSE `condition`
 END)
 WHERE `make` NOT IN ('Mercedes-Benz');


-- EX 04 ----------

DELETE  FROM `clients` 
WHERE id NOT IN (SELECT `client_id` FROM `courses`); 



-- EX 05 ------

SELECT `make`, `model`, `condition` FROM `cars`
ORDER BY `id`;

-- Ex 06 ----------

SELECT d.`first_name`, d.`last_name`, c.`make`, c.`model`, c.`mileage` FROM `drivers` AS d
 JOIN `cars_drivers` AS cd
ON d.`id` = cd.`driver_id`
 JOIN `cars` AS c
ON cd.`car_id` = c.`id`
WHERE `mileage` IS NOT NULL
ORDER BY c.`mileage` DESC, d.`first_name`;

-- EX 07 --------

SELECT c.`id`, `make`, `mileage`, COUNT(cr.`car_id`) AS `count_of_courses`, ROUND(AVG(`bill`), 2) AS `avg_bill`
FROM `cars` AS c
LEFT JOIN `courses` AS cr
ON c.`id` = cr.`car_id`
GROUP BY c.`id`
HAVING `count_of_courses` NOT IN (2)
ORDER BY `count_of_courses` DESC, c.`id`;

-- EX 08 ----------

SELECT `full_name`, COUNT(c.`id`) AS `count_of_cars`, SUM(`bill`) AS `total_bill` 
FROM `clients` AS cl
JOIN `courses` AS cr
ON cl.`id` = cr.`client_id`
JOIN `cars` AS c
ON cr.`car_id` = c.`id`
WHERE `full_name` LIKE '_a%'
GROUP BY cl.`id`
HAVING `count_of_cars` > 1
ORDER BY `full_name`;

-- EX 09 ---------

SELECT a.`name`, 
(IF (HOUR(`strat`) BETWEEN 6 AND 20, 'Day', 'Night')) AS `day_time`, 
`bill`, cl.`full_name`, `make`, `model`, ct.`name` AS `category_name`
FROM `addresses` AS a
JOIN `courses` AS cr
ON a.`id` = cr.`from_address_id`
JOIN `cars` AS c
ON cr.`car_id` = c.`id`
JOIN `categories` AS ct
ON c.`category_id` = ct.`id`
JOIN `clients` AS cl
ON cr.`client_id` = cl.`id`
ORDER BY cr.`id`;


-- EX 10 --------------

DELIMITER $$

CREATE FUNCTION udf_courses_by_client (phone_num VARCHAR (20)) 
RETURNS INT 
DETERMINISTIC

BEGIN
	RETURN (SELECT COUNT(cr.`client_id`) FROM `courses` AS cr
    JOIN `clients` AS cl
    ON cr.`client_id` = cl.`id`
    WHERE `phone_number` = phone_num
    GROUP BY `client_id`
    );


END $$

DELIMITER $$
SELECT udf_courses_by_client ('(803) 6386812') as `count`; 

SELECT udf_courses_by_client ('(831) 1391236') as `count`;

-- EX 11 --------

DELIMITER $$

CREATE PROCEDURE udp_courses_by_address(address_name VARCHAR(100))

BEGIN

SELECT a.`name`, cl.`full_name`, (
	CASE
		WHEN `bill` <= 20 THEN 'Low'
        WHEN `bill` <= 30 THEN 'Medium'
        ELSE 'High'
END) AS `level_of_bill`,
`make`, `condition`, ct.`name` FROM `addresses` AS a
JOIN `courses` AS cr
ON a.`id` = cr.`from_address_id`
JOIN `clients` AS cl
ON cr.`client_id` = cl.`id`
JOIN `cars` AS c
ON cr.`car_id` = c.`id`
JOIN `categories` AS ct
ON c.`category_id` = ct.`id`
WHERE a.`name` = address_name
ORDER BY `make`, cl.`full_name`;

END $$

DELIMITER ;

CALL udp_courses_by_address('700 Monterey Avenue');