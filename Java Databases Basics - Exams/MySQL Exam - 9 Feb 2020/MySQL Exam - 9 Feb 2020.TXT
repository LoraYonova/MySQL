-- EX 01------

CREATE TABLE `countries`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(45) NOT NULL
);

CREATE TABLE `towns`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(45) NOT NULL,
    `country_id` INT NOT NULL,
    CONSTRAINT `fk_countries_towns`
    FOREIGN KEY (`country_id`)
    REFERENCES `countries`(`id`)

);

CREATE TABLE `stadiums`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(45) NOT NULL,
    `capacity` INT NOT NULL,
    `town_id` INT NOT NULL,
    CONSTRAINT `fk_towns_stadiums`
    FOREIGN KEY (`town_id`)
    REFERENCES `towns`(`id`)
);

CREATE TABLE `teams`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(45) NOT NULL,
    `established` DATE NOT NULL,
    `fan_base` BIGINT(20) DEFAULT 0 NOT NULL,
    `stadium_id` INT NOT NULL,
    CONSTRAINT `fk_stadiums_teams`
    FOREIGN KEY (`stadium_id`)
    REFERENCES `stadiums`(`id`)
);


CREATE TABLE `skills_data`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `dribbling` INT DEFAULT 0,
    `pace` INT DEFAULT 0,
    `passing` INT DEFAULT 0,
    `shooting` INT DEFAULT 0,
    `speed` INT DEFAULT 0,
    `strength` INT DEFAULT 0
);

CREATE TABLE `coaches`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `first_name` VARCHar(10) NOT NULL,
    `last_name` VARCHAR(20) NOT NULL,
    `salary` DECIMAL(10,2) DEFAULT 0 NOT NULL,
    `coach_level` INT DEFAULT 0 NOT NULL
);

CREATE TABLE `players`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `first_name` VARCHAR(10) NOT NULL,
    `last_name` VARCHAR(20) NOT NULL,
    `age` INT NOT NULL DEFAULT 0,
    `position` CHAR(1) NOT NULL,
    `salary` DECIMAL(10,2) DEFAULT 0 NOT NULL,
    `hire_date` DATETIME,
    `skills_data_id` INT NOT NULL,
    `team_id` INT,
    CONSTRAINT `fk_teams_players`
    FOREIGN KEY (`team_id`)
    REFERENCES `teams`(`id`),
    CONSTRAINT `fk_skills_date_players`
    FOREIGN KEY (`skills_data_id`)
    REFERENCES `skills_data`(`id`)
);




CREATE TABLE `players_coaches`(
	`player_id` INT,
    `coach_id` INT,
    CONSTRAINT `pk_player_coach`
    PRIMARY KEY (`player_id`, `coach_id`),
    CONSTRAINT `fk_player_coach_coach`
    FOREIGN KEY (`coach_id`)
    REFERENCES `coaches`(`id`),
    CONSTRAINT `fk_player_coach_player`
    FOREIGN KEY (`player_id`)
    REFERENCES `players`(`id`)
);

-- EX 02 ------
 
INSERT INTO `coaches`(`first_name`, `last_name`, `salary`, `coach_level`)
SELECT `first_name`, `last_name`, `salary` * 2, CHAR_LENGTH(`first_name`)
FROM `players` WHERE `age` >= 45;
 
 
 -- EX 03-------
 
UPDATE `coaches` 
SET `coach_level` = `coach_level` + 1
WHERE `first_name` LIKE 'A%' 
AND `id` IN (SELECT `coach_id` FROM `players_coaches`);
 
 
 -- EX 04--------
 
DELETE FROM `players`
 WHERE `age` >= 45;
 
 -- EX 05--------

SELECT `first_name`, `age`, `salary` 
FROM `players`
ORDER BY `salary` DESC;

-- EX 06------

SELECT p.`id`, CONCAT(`first_name`, ' ', `last_name`) AS `full_name`, `age`, `position`, `hire_date`
FROM `players` AS p
JOIN `skills_data` AS s
ON `skills_data_id` = s.`id`
WHERE `position` = 'A' 
AND `hire_date` IS NULL 
AND `strength` > 50
AND `age` < 23
ORDER BY `salary`, `age`;


-- Ex 07-------

SELECT `name` AS `team_name`, `established`, `fan_base`, COUNT(`team_id`) AS `players_count`
FROM `teams` AS t
LEFT JOIN `players` AS p
ON p.`team_id` = t.`id`
GROUP BY t.`name`
ORDER BY `players_count` DESC, `fan_base` DESC;


-- EX 08 --------

SELECT MAX(sd.`speed`) AS `max_speed`, t.`name` AS `town_name`
FROM `skills_data` AS sd
RIGHT JOIN `players` AS p
ON sd.`id` = p.`skills_data_id`
RIGHT JOIN `teams` AS tm
ON p.`team_id` = tm.`id`
RIGHT JOIN `stadiums` AS s
ON tm.`stadium_id` = s.`id`
RIGHT JOIN `towns` AS t
ON s.`town_id` = t.`id`
WHERE tm.`name` NOT IN ('Devify')
GROUP BY t.`id`
ORDER BY `max_speed` DESC, `town_name`;


-- EX 09 ------

SELECT 
    c.`name`,
    COUNT(p.`id`) AS `total_count_of_players`,
    SUM(`salary`) AS `total_sum_of_salaries`
FROM
    `countries` AS c
        LEFT JOIN
    `towns` AS t ON c.`id` = t.`country_id`
        LEFT JOIN
    `stadiums` AS s ON t.`id` = s.`town_id`
        LEFT JOIN
    `teams` AS tm ON s.`id` = tm.`stadium_id`
        LEFT JOIN
    `players` AS p ON p.`team_id` = tm.`id`
GROUP BY c.`name`
ORDER BY `total_count_of_players` DESC , c.`name`;


-- EX 10 -------

DELIMITER $$

CREATE FUNCTION udf_stadium_players_count (stadium_name VARCHAR(30))

RETURNS INT
DETERMINISTIC

BEGIN

	RETURN (SELECT COUNT(p.`id`) AS `count`
		FROM `stadiums`AS s
		LEFT JOIN `teams` AS t
		ON s.`id` = t.`stadium_id`
		LEFT JOIN `players` AS p
		ON t.`id` = p.`team_id`
		WHERE s.`name` = stadium_name
		GROUP BY s.`id`

);


END $$

DELIMITER ;


SELECT udf_stadium_players_count ('Linklinks');

-- EX 11 --------

DELIMITER $$
CREATE PROCEDURE udp_find_playmaker(min_dribble_points INT, team_name VARCHAR(45))
BEGIN 

   SELECT CONCAT(p.`first_name`, ' ', p.`last_name`) AS `full_name`, p.`age`, p.`salary`,
sd.`dribbling` AS `dribbling`, sd.`speed`, t.`name` AS `team_name`
FROM `players` AS p
JOIN `skills_data` AS sd
ON p.`skills_data_id` = sd.`id`
JOIN `teams` AS t
ON p.`team_id` = t.`id`
WHERE sd.`speed`> (SELECT AVG(`speed`) FROM `skills_data`) 
		AND sd.`dribbling` > min_dribble_points
        AND t.`name` = team_name
	 
ORDER BY sd.`speed` DESC
LIMIT 1;
	

END $$
DELIMITER ;

CALL udp_find_playmaker (20, 'Skyble');