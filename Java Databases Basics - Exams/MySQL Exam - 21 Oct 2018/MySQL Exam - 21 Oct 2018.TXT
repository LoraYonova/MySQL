-- EX 00 ----------

CREATE DATABASE `colonial_journey`;

USE `colonial_journey`;

CREATE TABLE `planets`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(30) NOT NULL
);

CREATE TABLE `spaceports`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(50) NOT NULL,
    `planet_id` INT,
    CONSTRAINT `fk_planets_spaceports`
    FOREIGN KEY (`planet_id`)
    REFERENCES `planets`(`id`)
);

CREATE TABLE `spaceships`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(50) NOT NULL,
    `manufacturer` VARCHAR(30) NOT NULL,
    `light_speed_rate` INT DEFAULT 0
);


CREATE TABLE `journeys`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `journey_start` DATETIME NOT NULL,
    `journey_end` DATETIME NOT NULL,
    `purpose` ENUM('Medical', 'Technical', 'Educational', 'Military'),
    `destination_spaceport_id` INT,
    `spaceship_id` INT,
    CONSTRAINT `fk_spaceports_journeys`
    FOREIGN KEY (`destination_spaceport_id`)
    REFERENCES `spaceports`(`id`),
    CONSTRAINT `fk_spaceships_journeys`
    FOREIGN KEY (`spaceship_id`)
    REFERENCES `spaceships`(`id`)
);


CREATE TABLE `colonists`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `first_name` VARCHAR(20) NOT NULL,
    `last_name` VARCHAR(20) NOT NULL,
    `ucn` CHAR(10) UNIQUE NOT NULL,
    `birth_date` DATE NOT NULL
);

CREATE TABLE `travel_cards`(
	`id` INT PRIMARY KEY AUTO_INCREMENT,
    `card_number` CHAR(10) UNIQUE NOT NULL,
    `job_during_journey` ENUM('Pilot', 'Engineer', 'Trooper', 'Cleaner', 'Cook'),
    `colonist_id` INT,
    `journey_id` INT,
    CONSTRAINT `fk_colonists_travel_cards`
    FOREIGN KEY (`colonist_id`)
    REFERENCES `colonists`(`id`),
    CONSTRAINT `fk_journeys_travel_cards`
    FOREIGN KEY (`journey_id`)
    REFERENCES `journeys`(`id`)
);


-- EX 01 ---------

INSERT INTO `travel_cards`(`card_number`, `job_during_journey`, `colonist_id`, `journey_id`) 
SELECT 
 (CASE
   WHEN `birth_date` > '1980-01-01' THEN CONCAT(YEAR(`birth_date`), DAY(`birth_date`), LEFT(`ucn`, 4))
   WHEN `birth_date` < '1980-01-01' THEN CONCAT(YEAR(`birth_date`), MONTH(`birth_date`), RIGHT(`ucn`, 4))
   END),

 (CASE
	WHEN c.`id` % 2 = 0 THEN 'Pilot'
    WHEN c.`id` % 3 = 0 THEN 'Cook'
    ELSE 'Engineer'
 END), c.`id`, LEFT(`ucn`, 1)
 FROM `colonists` AS c
 WHERE c.`id` BETWEEN 96 AND 100;
 
 
 -- EX 02 ----------
 
 UPDATE `journeys`
 SET `purpose` =
 (CASE
		WHEN `id` % 2 = 0 THEN 'Medical'
		WHEN `id` % 3 = 0 THEN 'Technical'
		WHEN `id` % 5 = 0 THEN 'Educational'
		WHEN `id` % 7 = 0 THEN 'Military'
        ELSE `purpose`
 
 END);
 
 
 -- EX 03 ------------
 
 DELETE FROM `colonists`
 WHERE `id` NOT IN (SELECT `colonist_id` FROM `travel_cards`);
 
 -- EX 04 -----------
 
 SELECT `card_number`, `job_during_journey` FROM `travel_cards`
 ORDER BY `card_number`;
 
 
 -- EX 05 ------
 
 SELECT `id`, CONCAT(`first_name`, ' ', `last_name`) AS `full_name`, `ucn` FROM `colonists`
 ORDER BY `first_name`, `last_name`, `id`;
 
 
 -- EX 06 --------
 
 SELECT `id`, `journey_start`, `journey_end` FROM `journeys`
 WHERE `purpose` = 'Military'
 ORDER BY `journey_start`;
 
 
 -- EX 07 ---------
 
 SELECT c.`id`, CONCAT(`first_name`, ' ', `last_name`) AS `full_name` FROM `colonists` AS c
 JOIN `travel_cards` AS t
 ON c.`id` = t.`colonist_id`
 WHERE `job_during_journey` = 'Pilot'
 ORDER BY c.`id`;
 
 
 -- EX 08 ----------
 
 SELECT COUNT(c.`id`) AS `count` FROM `colonists` AS c
 JOIN `travel_cards` AS t
 ON c.`id` = t.`colonist_id`
 JOIN `journeys` AS j
 ON t.`journey_id` = j.`id`
 WHERE j.`purpose` = 'Technical';
 

-- EX 09 ----------

SELECT ss.`name` AS `spaceship_name`, sp.`name` AS `spaceport_name` 
FROM `spaceships` AS ss
JOIN `journeys` AS j
ON ss.`id` = j.`spaceship_id`
JOIN `spaceports` AS sp
ON j.`destination_spaceport_id` = sp.`id`
ORDER BY `light_speed_rate` DESC
LIMIT 1;


-- EX 10 ---------

SELECT `name`, `manufacturer` 
FROM `spaceships` AS s
JOIN `journeys` AS j
ON s.`id` = j.`spaceship_id`
JOIN `travel_cards` AS t
ON j.`id` = t.`journey_id`
JOIN `colonists` AS c
ON t.`colonist_id` = c.`id`
WHERE t.`job_during_journey` = 'Pilot' AND YEAR(`birth_date`) > 1989
ORDER BY s.`name`;

-- EX 11 ---------

SELECT p.`name` AS `planet_name`, s.`name` AS `spaceport_name` FROM `planets` AS p
JOIN `spaceports` AS s
ON p.`id` = s.`planet_id`
JOIN `journeys` AS j
ON s.`id` = j.`destination_spaceport_id`
WHERE j.`purpose` = 'Educational'
ORDER BY `spaceport_name` DESC;


-- EX 12 ----------

SELECT p.`name` AS `planet_name`, COUNT(j.`destination_spaceport_id`) AS `journeys_count`
FROM `planets` AS p
JOIN `spaceports` AS s
ON p.`id` = s.`planet_id`
JOIN `journeys` AS j
ON s.`id` = j.`destination_spaceport_id`
GROUP BY p.`name`
ORDER BY `journeys_count` DESC, `planet_name`;


-- EX 13 ----------

SELECT j.`id`, p.`name` AS `planet_name`, s.`name` AS `spaceport_name`, j.`purpose` AS `journey_purpose`
FROM `journeys` AS j
JOIN `spaceports` AS s
ON j.`destination_spaceport_id` = s.`id`
JOIN `planets` AS p
ON s.`planet_id` = p.`id`
ORDER BY DATEDIFF(`journey_end`,`journey_start`)
LIMIT 1;

-- EX 14 ---------

SELECT t.`job_during_journey`
FROM `travel_cards` AS t
WHERE t.`journey_id` =  (
  SELECT j.`id`
  FROM `journeys` AS j
  ORDER BY DATEDIFF(j.`journey_end`, j.`journey_start`) DESC
  LIMIT 1
)
GROUP BY t.`job_during_journey`
ORDER BY count(t.`job_during_journey`)
LIMIT 1;


-- EX 15 --------

DELIMITER $$

CREATE FUNCTION udf_count_colonists_by_destination_planet (planet_name VARCHAR (30))
RETURNS INT
DETERMINISTIC

BEGIN
RETURN (SELECT COUNT(p.`name`) FROM `planets`AS p
JOIN `spaceports` AS s
ON p.`id` = s.`planet_id`
JOIN `journeys` AS j
ON s.`id` = j.`destination_spaceport_id`
JOIN `travel_cards` AS tc
ON j.`id` = tc.`journey_id`
JOIN `colonists` AS c
ON tc.`colonist_id` = c.`id`
WHERE p.`name` = planet_name);


END $$

DELIMITER ;

SELECT p.name, udf_count_colonists_by_destination_planet('Otroyphus') AS count
FROM planets AS p
WHERE p.name = 'Otroyphus';


-- EX 16 ------------

DELIMITER $$

CREATE PROCEDURE udp_modify_spaceship_light_speed_rate(spaceship_name VARCHAR(50), light_speed_rate_increse INT(11)) 

BEGIN 
	 IF (SELECT COUNT(`name`) FROM `spaceships`  WHERE `name` = spaceship_name > 0) THEN
      UPDATE `spaceships` 
        SET `light_speed_rate` = `light_speed_rate` + light_speed_rate_increse
        WHERE `name` = spaceship_name;
    ELSE
      SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = 'Spaceship you are trying to modify does not exists.';
      ROLLBACK;
    END IF;
END $$

DELIMITER ;
